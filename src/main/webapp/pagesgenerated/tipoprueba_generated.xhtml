some content...package com.nerys.model;
// <editor-fold defaultstate="collapsed" desc="imports">

import jakarta.enterprise.context.RequestScoped;
import jakarta.inject.Inject;
import java.io.Serializable;
/**
* Java
*/
import java.time.LocalDateTime;
import java.lang.annotation.Annotation;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.function.Supplier;
import java.util.UUID;
/**
* Jmoordb
*/
import com.jmoordb.core.util.MessagesUtil;
import com.jmoordb.core.util.JmoordbCoreDateUtil;
import com.jmoordb.core.annotation.Referenced;
import com.jmoordb.core.annotation.enumerations.TypePK;
import com.jmoordb.core.annotation.enumerations.TypeReferenced;
/**
* MongoDB
*/
import org.bson.Document;
import org.bson.types.ObjectId;
import com.mongodb.client.model.Filters;
import com.mongodb.client.model.Updates;
import org.bson.conversions.Bson;
import com.nerys.model.TipoPrueba;
import com.nerys.model.*;


// </editor-fold>
@RequestScoped
public class TipoPruebaSupplier  implements Serializable{
// <editor-fold defaultstate="collapsed" desc="inject">

    @Inject
   ObservacionTipoPruebaSupplier observacionTipoPruebaSupplier ;
    @Inject
   ActionHistorySupplier actionHistorySupplier ;
// </editor-fold>
// <editor-fold defaultstate="collapsed" desc=" public TipoPrueba get(Supplier<? extendsTipoPrueba> s, Document document, Boolean... showError) ">

    public TipoPrueba get(Supplier<? extends TipoPrueba> s, Document document_, Boolean... showError) {
        TipoPrueba tipoPrueba= s.get(); 
            Boolean show = true;
        try {
            if (showError.length != 0) {
                show = showError[0];
            }
	
	 tipoPrueba.setIdtipoprueba(document_.getLong("idtipoprueba"));
	tipoPrueba.setTipoPrueba(document_.getString("tipoPrueba"));
	tipoPrueba.setActive(document_.getBoolean("active"));

	// Embedded List<observacionTipoPrueba>
	List<ObservacionTipoPrueba> observacionTipoPruebaList = new ArrayList<>();
	List<Document> observacionTipoPruebaDoc = (List) document_.get("observacionTipoPrueba");
	if( observacionTipoPruebaDoc == null || observacionTipoPruebaDoc.isEmpty()){


	}else{
		for( Document docObservacionTipoPrueba : observacionTipoPruebaDoc){
			ObservacionTipoPrueba observacionTipoPrueba = observacionTipoPruebaSupplier.get(ObservacionTipoPrueba::new, docObservacionTipoPrueba);
			observacionTipoPruebaList.add(observacionTipoPrueba);
		}
	}
	tipoPrueba.setObservacionTipoPrueba(observacionTipoPruebaList);
		

	// Embedded List<actionHistory>
	List<ActionHistory> actionHistoryList = new ArrayList<>();
	List<Document> actionHistoryDoc = (List) document_.get("actionHistory");
	if( actionHistoryDoc == null || actionHistoryDoc.isEmpty()){


	}else{
		for( Document docActionHistory : actionHistoryDoc){
			ActionHistory actionHistory = actionHistorySupplier.get(ActionHistory::new, docActionHistory);
			actionHistoryList.add(actionHistory);
		}
	}
	tipoPrueba.setActionHistory(actionHistoryList);
		

         } catch (Exception e) {
             if (show) {
                MessagesUtil.error(MessagesUtil.nameOfClassAndMethod() + " " + e.getLocalizedMessage());
             }
         }
         return tipoPrueba;
     }
// </editor-fold>
// <editor-fold defaultstate="collapsed" desc=" public TipoPrueba getId(Supplier<? extendsTipoPrueba> s, Document document, Boolean... showError) ">

    public TipoPrueba getId(Supplier<? extends TipoPrueba> s, Document document_, Boolean... showError) {
        TipoPrueba tipoPrueba= s.get(); 
            Boolean show = true;
        try {
            if (showError.length != 0) {
                show = showError[0];
            }
	
	 tipoPrueba.setIdtipoprueba(document_.getLong("idtipoprueba"));

         } catch (Exception e) {
             if (show) {
                MessagesUtil.error(MessagesUtil.nameOfClassAndMethod() + " " + e.getLocalizedMessage());
             }
         }
         return tipoPrueba;
     }
// </editor-fold>
// <editor-fold defaultstate="collapsed" desc=" public TipoPrueba putObjectId(TipoPrueba tipoPrueba String _id, Boolean... showError) ">

    public TipoPrueba putObjectId(TipoPrueba tipoPrueba, String _id, Boolean... showError) {
            Boolean show = true;
        try {
            if (showError.length != 0) {
                show = showError[0];
            }
	
         } catch (Exception e) {
             if (show) {
                MessagesUtil.error(MessagesUtil.nameOfClassAndMethod() + " " + e.getLocalizedMessage());
             }
         }
         return tipoPrueba;
     }
// </editor-fold>
// <editor-fold defaultstate="collapsed" desc=" public Document toDocument (TipoPrueba tipoPrueba) ">

    public Document toDocument(TipoPrueba tipoPrueba) {
        Document document_ = new Document();
        try {
	 
		document_.put("idtipoprueba",tipoPrueba.getIdtipoprueba());
		document_.put("tipoPrueba",tipoPrueba.getTipoPrueba());
		document_.put("active",tipoPrueba.getActive());

	// Embedded List<observacionTipoPrueba>
		document_.put("observacionTipoPrueba",observacionTipoPruebaSupplier.toDocument(tipoPrueba.getObservacionTipoPrueba()));

	// Embedded List<actionHistory>
		document_.put("actionHistory",actionHistorySupplier.toDocument(tipoPrueba.getActionHistory()));
	

         } catch (Exception e) {
              MessagesUtil.error(MessagesUtil.nameOfClassAndMethod() + " " + e.getLocalizedMessage());
         }
         return document_;
     }
// </editor-fold>
// <editor-fold defaultstate="collapsed" desc=" public List<Document> toDocument (List<TipoPrueba> tipoPruebaList) ">

    public List<Document> toDocument(List<TipoPrueba> tipoPruebaList) {
        List<Document> documentList_ = new ArrayList<>();
        try {
	 
	 for(TipoPrueba tipoPrueba : tipoPruebaList){
		 Document document_ = new Document();
		document_.put("idtipoprueba",tipoPrueba.getIdtipoprueba());
		document_.put("tipoPrueba",tipoPrueba.getTipoPrueba());
		document_.put("active",tipoPrueba.getActive());

	// Embedded List<observacionTipoPrueba>
		document_.put("observacionTipoPrueba",observacionTipoPruebaSupplier.toDocument(tipoPrueba.getObservacionTipoPrueba()));

	// Embedded List<actionHistory>
		document_.put("actionHistory",actionHistorySupplier.toDocument(tipoPrueba.getActionHistory()));
		documentList_.add(document_);
	

       }
         } catch (Exception e) {
              MessagesUtil.error(MessagesUtil.nameOfClassAndMethod() + " " + e.getLocalizedMessage());
         }
         return documentList_;
     }
// </editor-fold>
// <editor-fold defaultstate="collapsed" desc=" public Bson toUpdate (TipoPrueba tipoPrueba) ">

    public Bson toUpdate(TipoPrueba tipoPrueba) {
        Bson update_ = Filters.empty();
        try {
        update_ = Updates.combine(
	 
		Updates.set("idtipoprueba",tipoPrueba.getIdtipoprueba()),
		Updates.set("tipoPrueba",tipoPrueba.getTipoPrueba()),
		Updates.set("active",tipoPrueba.getActive()),

	// Embedded List<observacionTipoPrueba>
		Updates.set("observacionTipoPrueba",observacionTipoPruebaSupplier.toDocument(tipoPrueba.getObservacionTipoPrueba())),

	// Embedded List<actionHistory>
		Updates.set("actionHistory",actionHistorySupplier.toDocument(tipoPrueba.getActionHistory()))
	

        );
         } catch (Exception e) {
              MessagesUtil.error(MessagesUtil.nameOfClassAndMethod() + " " + e.getLocalizedMessage());
         }
         return update_;
     }
// </editor-fold>
// <editor-fold defaultstate="collapsed" desc=" public List<Bson> toUpdate (List<TipoPrueba> tipoPruebaList) ">

    public List<Bson> toUpdate(List<TipoPrueba> tipoPruebaList) {
        List<Bson> bsonList_ = new ArrayList<>();
        try {
	 for(TipoPrueba tipoPrueba : tipoPruebaList){
		 Bson update_ = Filters.empty();
			update_ = Updates.combine(
	 
		Updates.set("idtipoprueba",tipoPrueba.getIdtipoprueba()),
		Updates.set("tipoPrueba",tipoPrueba.getTipoPrueba()),
		Updates.set("active",tipoPrueba.getActive()),

	// Embedded List<observacionTipoPrueba>
		Updates.set("observacionTipoPrueba",observacionTipoPruebaSupplier.toDocument(tipoPrueba.getObservacionTipoPrueba())),

	// Embedded List<actionHistory>
		Updates.set("actionHistory",actionHistorySupplier.toDocument(tipoPrueba.getActionHistory()))
	

        );
		bsonList_.add(update_);
 
       }
         } catch (Exception e) {
              MessagesUtil.error(MessagesUtil.nameOfClassAndMethod() + " " + e.getLocalizedMessage());
         }
         return bsonList_;
     }
// </editor-fold>
// <editor-fold defaultstate="collapsed" desc=" public Document toReferenced (TipoPrueba tipoPrueba) ">

    public Document toReferenced(TipoPrueba tipoPrueba) {
        Document document_ = new Document();
        try {
	 
		document_.put("idtipoprueba",tipoPrueba.getIdtipoprueba());
	

         } catch (Exception e) {
              MessagesUtil.error(MessagesUtil.nameOfClassAndMethod() + " " + e.getLocalizedMessage());
         }
         return document_;
     }
// </editor-fold>
// <editor-fold defaultstate="collapsed" desc=" public List<Document> toReferenced(List<TipoPrueba> tipoPruebaList) ">

    public List<Document> toReferenced(List<TipoPrueba> tipoPruebaList) {
        List<Document> documentList_ = new ArrayList<>();
        try {
	 
	 for(TipoPrueba tipoPrueba : tipoPruebaList){
		 Document document_ = new Document();
		document_.put("idtipoprueba",tipoPrueba.getIdtipoprueba());
		documentList_.add(document_);
	

       }
         } catch (Exception e) {
              MessagesUtil.error(MessagesUtil.nameOfClassAndMethod() + " " + e.getLocalizedMessage());
         }
         return documentList_;
     }
// </editor-fold>

}